<?php
// $Id$


/**
 * @file
 * Allow to have an splitted menu within two blocks
 * Developed by Robert Garrigos <robert@garrigos.cat>
 * Modified for Drupal 6.x by Frank Meyerer <meyerer@digi-info.de>
 * http://www.digi-info.de
 */

/**
 * Implementation of hook_perm().
 */
function menu_block_split_perm() {
  return array('administer menu block split');
}

/**
 * Implementation of hook_menu().
 */
function menu_block_split_menu() {
  $items = array();

  $items['admin/settings/menu_block_split'] = array(
    'title' => t('Menu block split'),
    'description' => t('Settings for Menu Block Split'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('menu_block_split_settings'),
    'access arguments' => array('administer menu block split'),
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function menu_block_split_theme() {
  return array(
    'menu_block_split_menu' => array(
      'arguments' => array('name', 'tree', 'level'),
    ),
  );
}

/**
 * Settings form
 */
function menu_block_split_settings() {
  $form['menu_block_split_howmany'] = array(
    '#type' => 'select',
    '#title' => t('How many blocks with first level menu do you need?'),
    '#default_value' => variable_get('menu_block_split_howmany', 1),
    '#options' => range(0, 10),
    '#description' => t('Set how many first menu level blocks do you need and click on the Save Configuration button to have the form available.'),
  );
  // We don't want zero as an option
  unset($form['menu_block_split_howmany']['#options'][0]);

  $menu_select_options = array();
  foreach (menu_get_menus() as $name => $title) {
    if (count(menu_navigation_links($name)) > 0) {
      $menu_select_options[$name] = $title;
    }
  }
  for ($i = 1; $i <= variable_get('menu_block_split_howmany', 1); $i++) {
    $form['menu_block_split_fieldset_'. $i] = array(
      '#type' => 'fieldset',
      '#title' => t('Menu Block Split !i', array('!i' => $i)),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
    $form['menu_block_split_fieldset_'. $i]['menu_block_split_'. $i] = array(
      '#type' => 'select',
      '#title' => t('Block'. $i),
      '#options' => $menu_select_options,
      '#default_value' => variable_get('menu_block_split_'. $i, ''),
      '#description' => t('Choose a block as first level menu to split.'),
    );
    $form['menu_block_split_fieldset_'. $i]['menu_block_splittitle_'. $i] = array(
      '#type' => 'textfield',
      '#title' => t('Title') .' '. $i,
      '#default_value' => variable_get('menu_block_splittitle_'. $i, ''),
      '#required' => FALSE,
      '#description' => t('Set the title of the resulting block.'),
    );
  }
  return system_settings_form($form);
}

/**
 * Implementation of hook_block().
 */
function menu_block_split_block($op = 'list', $delta = 0, $edit = array()) {

  switch ($op) {
    case 'list':
      for ($i = 1; $i <= variable_get('menu_block_split_howmany', 1); $i++) {
        $mid                = variable_get('menu_block_split_'. $i, '');
        $item               = menu_load($mid);
        $blocks[$i]['info'] = 'Menu block split 1st level ('. $item['title'] .')';
      }
      $blocks[0]['info'] = 'Menu block split 2nd level';
      return $blocks;

    case 'view':
      // Delta 0 is the 2nd level block
      if ($delta > 0) {
        $tree             = menu_tree_page_data(variable_get('menu_block_split_'. $delta, ''));
        $block['subject'] = variable_get('menu_block_splittitle_'. $delta, '');
        $block['content'] = theme('menu_block_split_menu',
          variable_get('menu_block_split_'. $delta, ''),
          $tree, $delta
        );
      }
      else {
        $current_router_item = menu_get_item();
        for ($i = 1; $i <= variable_get('menu_block_split_howmany', 1); $i++) {
          $name = variable_get('menu_block_split_'. $i, '');
          $active = menu_get_active_menu_name();
          if ($active != $name) {
            menu_set_active_menu_name($name);
          }
          $trail            = menu_get_active_trail();
          $tree             = menu_tree_page_data($name);
          $info             = get_first_level($trail);
          $block['subject'] = $info['title'];
          $block['content'] = theme('menu_block_split_menu',
            $name, $tree, $delta
          );
        }
      }
      break;

    case 'cache':
      return BLOCK_NO_CACHE;
  }
  return $block;
}

/**
 * Theme menu
 *
 * @param string $name
 * @param array $tree
 *
 * @return menu tree
 */
function theme_menu_block_split_menu($name = 'navigation', $tree, $level) {
  if ($menu = menu_block_split_render_tree($tree, $level)) {
    return $menu;
  }
}

/**
 * Render menu
 *
 * @return menu tree
 */
function menu_block_split_render_tree($tree, $level) {

  $output = '';

  $num_items = count($tree);
  foreach ($tree as $i => $mid) {
    if ($mid['link']['hidden'] == 0) {
      $link = theme('menu_item_link', $mid['link']);
      // our first block
      if ($level > 0) {
        $output .= theme('menu_item', $link, '');
      }
      // sub block
      else {
        if ($mid['below']) {
          $output .= menu_tree_output($mid['below'], $level);
        }
      }
    }
  }
  if ($output) {
    return "\n<ul class=\"menu\">\n". $output ."\n</ul>\n";
  }
}

/**
 * Get info about first level.
 *
 * @param array $trail current trail
 *
 * @return title
 */
function get_first_level($trail) {
  return array('mlid' => $trail[1]['mlid'], 'title' => $trail[1]['title']);
}
